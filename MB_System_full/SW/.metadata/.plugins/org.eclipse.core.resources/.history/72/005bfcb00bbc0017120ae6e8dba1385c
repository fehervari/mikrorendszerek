# include "LCD.h"

struct LCD_STATUS {
	Xuint8		INTERRUPT_EN;
	Xuint8		STATE;
	Xuint8		INVERSE;
	Xuint8		POSITION;
};

static struct LCD_STATUS LCD;

Xuint8 itit_LCD(Xuint8 inverseEn, Xuint8 interruptEn){/* TODO */
	LCD.STATE = 0;
	LCD.INVERSE = inverseEn;
	LCD.INTERRUPT_EN = interruptEn;
	LCD.POSITION = 0;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_STATUS_REG_OFFSET) = 0x01;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)		  = 0xE2;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)		  = 0x40;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)		  = 0xA0;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)		  = 0xC8;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)		  = 0xA4;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)		  = 0xA6;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)		  = 0xA2;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)		  = 0x2F;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)		  = 0x27;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)		  = 0x81;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)		  = 0x10;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)		  = 0xFA;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)		  = 0x90;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)		  = 0xAF;

	return 0;
}

Xuint8 clear_LCD(void){ // lapok [0 ... 7] oszlopok [30 ... 131]
	Xuint8 page, colL, colH;
	Xuint8 i,j;
	Xuint32 k,data = 0x100;
	for (i = 0; i < 8; i++){ // lapok
		for(j = 0x1E; j < 0x84; j++){ // sorok
			page = 0xB0 + i; //lapcím
			colH = 0x10 + (j >> 4); // oszlop felsõ
			colL = j & 0x0F; // oszlop alsó
			MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)  = page;
			MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)  = colH;
			MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)  = colL;
			MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET) = data;
			MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET) = 0xA4;
			for(k = 0 ;k < 7483; ++k); // segbesség

		}
	}
}
void write_Pixel(Xuint8 x, Xuint8 y){ // x -> [30 ... 131]
	Xuint8 Page_addr = 0;//y >> 3;
	Xuint8 Col_addr = 0;//(y + 30);
	Xuint8 Col_addrH = 0x10 + (Col_addr >> 4);
	Xuint8 Col_addrL = Col_addr & 0x0F;
	Xuint8 Row_addr = 0x1 >> x;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)  = Page_addr;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)  = Col_addrH;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET)  = Col_addrL;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET) = 0xFF;
	MEM16(LCD_SCREEN_BASEADDR + LCD_SCREEN_FIFO_OFFSET) = 0xA4;
}
